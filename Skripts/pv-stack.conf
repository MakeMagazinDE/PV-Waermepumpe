# Zu erstellende Verzeichnisse:
# Alle permanenten Docker Dateien werden im Verzeichen /docker gespeichert. 
# Bei einer Synology NAS muss dem Pfad das Volumen z.B. /volume1/ vorangestellt werden.
# mkdir /docker
# mkdir /docker/evcc/
# mkdir /docker/evcc/.evcc
# mkdir /docker/iobroker
# mkdir /docker/iobroker/iobroker-data
# mkdir /docker/iobroker/redis-data
# mkdir /docker/iobroker/influx-data
# mkdir /docker/iobroker/influx-data/influxdb_v1
# mkdir /docker/iobroker/influx-data/influxdb_v2
# mkdir /docker/iobroker/influx-data/influxd_conf
# mkdir /docker/filebrowser
# touch /docker/evcc/evcc.yaml


services:
  # Achtung - "race condition": Es kann vorkommen, dass der evcc Container vor dem
  # Start des mqtt Servers stattfindet. evcc kann damit umgehen und wird im Normalfall
  # auf den Server warten. 
  # Falls der Container den Fehler nicht selbst behebt und im Status "starting" oder
  # "unhealthy" bleibt, den evcc Container per Hand neu starten.
  # (Eine Lösung via Stack wäre möglich, würde den Rahmen des Artikels aber übersteigen)
  evcc:
    container_name: evcc
    image: evcc/evcc:latest
    network_mode: host
    hostname: evcc
    restart: unless-stopped    
    ports:
      - "7070:7070"         # Weboberfläche und API evcc
      - "8887:8887"         # OCPP Wallboxen
      - "7090:7090/udp"     # KEBA Wallbox
      - "7070:7070/tcp"     # Weboberfläche und API evcc
      - "8887:8887"         # OCPP Wallboxen
      - "7090:7090/udp"     # KEBA Wallbox
      - "9522:9522/udp"     # SMA Multicast Protokoll
      - "5353:5353/udp"     # mDNS
      - "4712:4712/tcp"	    # EEBus
      - "8899:8899/udp"	    # Modbus UDP
    volumes:
      - /docker/evcc/evcc.yaml:/etc/evcc.yaml              # evcc Konfigurationsdatei - Pfad links vom Doppelpunkt muss angepasst werden
                                                           # vor den ersten Start eine leere evcc.yaml Konfigurationsdatei erstellen    
      - /docker/evcc/evcc.yaml:/app/evcc.yaml              # der evcc Assistent schreibt die evcc.yaml Datei in der Verzeichnis app, damit diese automatisch
                                                           # am "richtigen Ort" verfügbar ist, wird die selbe Datei an zwei Orte gemountet.
      - /docker/evcc/.evcc:/root/.evcc                     # evcc Speicherort db / Ladehistorie u.s.w. - Pfad links vom Doppelpunkt muss angepasst werden
      - /etc/machine-id:/etc/machine-id                    # Übernahme der Systemeinstelungen, muss nicht geändert werden
      - /var/lib/dbus/machine-id:/var/lib/dbus/machine-id  # Übernahme der Systemeinstellungen, unter Synology NAS den auskommentierten Pfad nutzen
      #- /etc/machine-id:/var/lib/dbus/machine-id           # Übernahme der Systemeinstelungen, muss nicht geändert werden
    depends_on:
      iobroker:
        condition: service_healthy
        restart: true
    
  iobroker:
    container_name: iobroker
    image: buanet/iobroker:latest
    hostname: iobroker
    restart: unless-stopped
    ports:               # geöffnete ioBroker Ports, Schema Port nach außen : Port intern (im Container)
      - "1880:1880"      # node-red Adapter
      - "1883:1883"      # mqtt (allgemein, iobroker als mqtt Broker)
      - "1882:1882"      # mqtt (für Shelly Adapter, mqtt Broker nur für Shelly Geräte)
      - "2001:2001"      # homematic ip / ccu Instanz
      - "8081:8081"      # iobroker admin Webinterface
      - "8082:8082"      # iobroker Webserver - Auswahl Webservices
      - "8091:8091"      # lovelace Weboberfläche
      - "8282:8282"      # flot Graphen Instanz
      - "8088:8088"      # iobroker Terminal / Kommandozeile
      - "8284:8284"      # iobroker socketIO Instanz
      - "502:502"        # Modbus Server / Instanz
      - "80:80"          # iobroker LetsEncrypt acme Instanz (ssl zertifikate bei Freigabe über einen dyndns Dienst)
    environment:
      - IOB_STATESDB_HOST=redis
      - IOB_STATESDB_PORT=6379
      - IOB_STATESDB_TYPE=redis
      - IOB_ADMINPORT=8081
      - DEBUG=false
      #- SETGID=1200    # GroupID, falls nicht der Default 1000 verwendet wird.
      #- SETUID=1200.   # UserID, falls nicht der Detauls 1000 verwendet wird.
    volumes:
      - /docker/iobroker/iobroker-data:/opt/iobroker
    depends_on:
      - redis
      - influxdb
    healthcheck:
      test: ["CMD", "sh", "-c", "netstat -an | grep -q ':1883'"]
      interval: 30s
      timeout: 5s
      retries: 3  
 
  redis:
    container_name: redis
    image: redis:latest
    hostname: redis
    restart: unless-stopped
    ports:
      - "16379:6379" # Portfreigaben, Schema Port nach außen : Port intern (im Container)
    volumes:
      - /docker/iobroker/redis-data:/data       # io Broker Datenverzeichnis - Pfad links vom Doppelpunkt muss angepasst werden

  influxdb:
    container_name: influxdb
    image: influxdb:latest
    hostname: influxdb
    restart: unless-stopped
    ports:
      - "18086:8086" # Portfreigaben, Schema Port nach außen : Port intern (im Container)
    volumes:
      - /docker/iobroker/influx-data/influxdb_v1:/var/lib/influxdb   # Speicherpfade der Datenbank Dateien außerhalb des Containers.
      - /docker/iobroker/influx-data/influxdb_v2:/var/lib/influxdb2  # Der Pfad links vom Doppelpunkt muss angepasst werden
      - /docker/iobroker/influx-data/influxdb_conf:/etc/influxdb2    # Schema Pfad auf dem Hostsystem : Pfad im Container
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=influxdb # initialer Benutzer
      - DOCKER_INFLUXDB_INIT_PASSWORD=influxdb # initiales Passwort - einfach und bekannt, bitte ändern auf ein stärkeres Passwort
      - DOCKER_INFLUXDB_INIT_ORG=iobroker      # Organisation, erforderlich, ohne Bedeutung für die Installation, daher einfach iobroker
      - DOCKER_INFLUXDB_INIT_BUCKET=iobroker   # Name des Datencontainers, hier auch einfach iobroker
     # - DOCKER_INFLUXDB_INIT_RETENTION=54w     # Vorhaltung der Daten, hier 54 Wochen, nicht zur Dauerhaften Speicherung nutzen


  filebrowser:
    container_name: filebrowser
    hostname: filebrowser
    image: hurlenko/filebrowser
    user: "${UID}:${GID}"
    # user: "0:0" # Bei Synology NAS hat der root User meist diese Daten
    ports:
      - "9080:8080"
    volumes:
      - /docker:/data
      - /docker/filebrowser:/config
    environment:
      - FB_BASEURL=/filebrowser
      - FB_NOAUTH=true
    restart: unless-stopped